# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import api_pb2 as api__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class NikonTiCtrlStub(object):
  """To generate python client code
  python -m grpc_tools.protoc -I. --python_out=python --grpc_python_out=python api.proto

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetProperty = channel.unary_unary(
        '/api.NikonTiCtrl/GetProperty',
        request_serializer=api__pb2.GetPropertyRequest.SerializeToString,
        response_deserializer=api__pb2.GetPropertyResponse.FromString,
        )
    self.SetProperty = channel.unary_unary(
        '/api.NikonTiCtrl/SetProperty',
        request_serializer=api__pb2.SetPropertyRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.WaitProperty = channel.unary_unary(
        '/api.NikonTiCtrl/WaitProperty',
        request_serializer=api__pb2.WaitPropertyRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.ListProperty = channel.unary_unary(
        '/api.NikonTiCtrl/ListProperty',
        request_serializer=api__pb2.ListPropertyRequest.SerializeToString,
        response_deserializer=api__pb2.ListPropertyResponse.FromString,
        )
    self.SnapImage = channel.unary_unary(
        '/api.NikonTiCtrl/SnapImage',
        request_serializer=api__pb2.SnapImageRequest.SerializeToString,
        response_deserializer=api__pb2.ImageID.FromString,
        )
    self.GetImage = channel.unary_unary(
        '/api.NikonTiCtrl/GetImage',
        request_serializer=api__pb2.ImageID.SerializeToString,
        response_deserializer=api__pb2.Image.FromString,
        )
    self.LiveImage = channel.unary_stream(
        '/api.NikonTiCtrl/LiveImage',
        request_serializer=api__pb2.LiveImageRequest.SerializeToString,
        response_deserializer=api__pb2.Image.FromString,
        )


class NikonTiCtrlServicer(object):
  """To generate python client code
  python -m grpc_tools.protoc -I. --python_out=python --grpc_python_out=python api.proto

  """

  def GetProperty(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetProperty(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WaitProperty(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListProperty(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SnapImage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetImage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LiveImage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NikonTiCtrlServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetProperty': grpc.unary_unary_rpc_method_handler(
          servicer.GetProperty,
          request_deserializer=api__pb2.GetPropertyRequest.FromString,
          response_serializer=api__pb2.GetPropertyResponse.SerializeToString,
      ),
      'SetProperty': grpc.unary_unary_rpc_method_handler(
          servicer.SetProperty,
          request_deserializer=api__pb2.SetPropertyRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'WaitProperty': grpc.unary_unary_rpc_method_handler(
          servicer.WaitProperty,
          request_deserializer=api__pb2.WaitPropertyRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'ListProperty': grpc.unary_unary_rpc_method_handler(
          servicer.ListProperty,
          request_deserializer=api__pb2.ListPropertyRequest.FromString,
          response_serializer=api__pb2.ListPropertyResponse.SerializeToString,
      ),
      'SnapImage': grpc.unary_unary_rpc_method_handler(
          servicer.SnapImage,
          request_deserializer=api__pb2.SnapImageRequest.FromString,
          response_serializer=api__pb2.ImageID.SerializeToString,
      ),
      'GetImage': grpc.unary_unary_rpc_method_handler(
          servicer.GetImage,
          request_deserializer=api__pb2.ImageID.FromString,
          response_serializer=api__pb2.Image.SerializeToString,
      ),
      'LiveImage': grpc.unary_stream_rpc_method_handler(
          servicer.LiveImage,
          request_deserializer=api__pb2.LiveImageRequest.FromString,
          response_serializer=api__pb2.Image.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.NikonTiCtrl', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
